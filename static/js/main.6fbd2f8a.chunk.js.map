{"version":3,"sources":["counterContext.js","Child.js","counterReducer.js","Child2.js","Parent.js","App.js","index.js"],"names":["counterContext","createContext","Child","count","useContext","onClick","counterReducer","state","action","Child2","useReducer","dispatch","Parent","App","countState","useState","Provider","value","className","rootElement","document","getElementById","ReactDOM","render"],"mappings":"iIAIeA,G,KAFIC,wBAAc,I,OCgBlBC,EAhBD,WACZ,IAAIC,EAAQC,qBAAWJ,GACvB,OACE,gCACE,2DACA,yCAAYG,EAAM,MAClB,wBACEE,QAAS,WACPF,EAAM,KAAKA,EAAM,KAFrB,2B,OCASG,EARQ,SAACC,EAAOC,GAC7B,MACO,cADCA,EAEGD,EAAQ,EAERA,GCeEE,EAjBA,WACb,MAAwBC,qBAAWJ,EAAgB,GAAnD,mBAAKC,EAAL,KAAYI,EAAZ,KACA,OACE,gCACE,8EACA,gDAAmBJ,KACnB,wBACEF,QAAS,WACPM,EAAS,cAFb,mCCKSC,EAVA,WACb,OACE,gCACE,4DACA,cAAC,EAAD,IACA,cAAC,EAAD,QCJS,SAASC,IACtB,IAAIC,EAAaC,mBAAS,GAC1B,OACE,cAAC,EAAeC,SAAhB,CAAyBC,MAAOH,EAAhC,SACE,qBAAKI,UAAU,MAAf,SACE,cAAC,EAAD,QCLR,IAAMC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACV,EAAD,MAEFM,I","file":"static/js/main.6fbd2f8a.chunk.js","sourcesContent":["import React , {createContext} from 'react'\r\n\r\nvar counterContext=createContext(0)\r\n\r\nexport default counterContext","import React, { useContext } from \"react\";\r\nimport counterContext from \"./counterContext\";\r\nconst Child = () => {\r\n  var count = useContext(counterContext);\r\n  return (\r\n    <div>\r\n      <h2>This is a child component</h2>\r\n      <h3>Count: {count[0]}</h3>\r\n      <button\r\n        onClick={() => {\r\n          count[1](++count[0]);\r\n        }}\r\n      >\r\n        Increment\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default Child;\r\n","const counterReducer = (state, action) => {\r\n  switch (action) {\r\n    case \"INCREMENT\":\r\n      return state + 1;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default counterReducer;\r\n","import React, { useReducer } from \"react\";\r\nimport counterReducer from \"./counterReducer\";\r\n\r\nconst Child2 = () => {\r\n  let [state, dispatch] = useReducer(counterReducer, 0);\r\n  return (\r\n    <div>\r\n      <h3>This is a child component which uses reducer</h3>\r\n      <h3>Reducer Count:{state}</h3>\r\n      <button\r\n        onClick={() => {\r\n          dispatch(\"INCREMENT\");\r\n        }}\r\n      >\r\n        Inc using Reducer\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Child2;\r\n","import React from \"react\";\r\nimport Child from \"./Child\";\r\nimport Child2 from \"./Child2\";\r\n\r\nconst Parent = () => {\r\n  return (\r\n    <div>\r\n      <h1>This is a Parent component</h1>\r\n      <Child />\r\n      <Child2 />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Parent;\r\n","import \"./styles.css\";\nimport Parent from \"./Parent\";\nimport counterContext from \"./counterContext\";\nimport React, { useState } from \"react\";\n\nexport default function App() {\n  var countState = useState(0);\n  return (\n    <counterContext.Provider value={countState}>\n      <div className=\"App\">\n        <Parent />\n      </div>\n    </counterContext.Provider>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}